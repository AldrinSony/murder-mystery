-- Create the Students table
CREATE TABLE Students (
    student_id INT PRIMARY KEY,
    name VARCHAR(50),
    age INT,
    grade_level INT
);
-- Create the Courses table
CREATE TABLE Courses (
    course_id INT PRIMARY KEY,
    course_name VARCHAR(50),
    credits INT
);
-- Create the Enrollments table
CREATE TABLE Enrollments (
    enrollment_id INT PRIMARY KEY,
    student_id INT,
    course_id INT,
    grade DECIMAL(3, 2),
    FOREIGN KEY (student_id) REFERENCES Students(student_id),
    FOREIGN KEY (course_id) REFERENCES Courses(course_id)
);
-- Insert sample data into Students
INSERT INTO Students (student_id, name, age, grade_level) VALUES
(1, 'Alice', 20, 3),
(2, 'Bob', 21, 4),
(3, 'Charlie', 19, 3),
(4, 'Diana', 22, 4),
(5, 'Ethan', 20, 3);
-- Insert sample data into Courses
INSERT INTO Courses (course_id, course_name, credits) VALUES
(1, 'Math', 3),
(2, 'Science', 4),
(3, 'History', 3),
(4, 'Art', 2);
-- Insert sample data into Enrollments
INSERT INTO Enrollments (enrollment_id, student_id, course_id, grade) VALUES
(1, 1, 1, 3.5),
(2, 1, 2, 4.0),
(3, 2, 1, 2.5),
(4, 2, 3, 3.0),
(5, 3, 2, 3.0),
(6, 3, 4, 2.0),
(7, 4, 1, 3.5),
(8, 4, 3, 4.0),
(9, 5, 2, 3.0),
(10, 5, 4, 3.5);
SELECT AVG(grade) AS average_grade
FROM Enrollments;
SELECT Students.name, Courses.course_name
FROM Enrollments
INNER JOIN Students ON Enrollments.student_id = Students.student_id
INNER JOIN Courses ON Enrollments.course_id = Courses.course_id;   
SELECT grade_level, COUNT(*) AS student_count
FROM Students
GROUP BY grade_level;
SELECT Courses.course_name, MAX(Enrollments.grade) AS max_grade
FROM Enrollments
INNER JOIN Courses ON Enrollments.course_id = Courses.course_id
GROUP BY Courses.course_name;
SELECT Students.name, Courses.course_name, Courses.credits
FROM Enrollments
INNER JOIN Students ON Enrollments.student_id = Students.student_id
INNER JOIN Courses ON Enrollments.course_id = Courses.course_id;
SELECT Courses.course_name, AVG(Enrollments.grade) AS average_grade
FROM Enrollments
INNER JOIN Courses ON Enrollments.course_id = Courses.course_id
GROUP BY Courses.course_name
HAVING AVG(Enrollments.grade) > 3.0;
SELECT Students.name
FROM Students
WHERE NOT EXISTS (
    SELECT 1
    FROM Enrollments
    WHERE Enrollments.student_id = Students.student_id
    AND Enrollments.grade = 4.0
);
WITH OverallAverage AS (
    SELECT AVG(grade) AS overall_average
    FROM Enrollments
)
SELECT Students.name
FROM Students
INNER JOIN Enrollments ON Students.student_id = Enrollments.student_id
GROUP BY Students.name
HAVING AVG(Enrollments.grade) > (SELECT overall_average FROM OverallAverage);
SELECT Students.name, COUNT(Enrollments.course_id) AS num_courses, AVG(Enrollments.grade) AS average_grade
FROM Students
INNER JOIN Enrollments ON Students.student_id = Enrollments.student_id
GROUP BY Students.name;
